"""empty message

Revision ID: ba18de027bb0
Revises: 
Create Date: 2022-12-21 14:59:36.031814

"""
from alembic import op
import sqlalchemy as sa

import sqlalchemy_utils


# revision identifiers, used by Alembic.
revision = 'ba18de027bb0'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('plan',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nombre_entidad', sa.String(length=50), nullable=True),
    sa.Column('nit', sa.String(length=12), nullable=True),
    sa.Column('nombre_representante_legal', sa.String(length=50), nullable=True),
    sa.Column('periodo_auditado', sa.Integer(), nullable=True),
    sa.Column('anio_realizacion_auditoria', sa.Integer(), nullable=True),
    sa.Column('nombre_informe', sa.String(length=50), nullable=True),
    sa.Column('modalidad_auditoria', sa.String(length=50), nullable=True),
    sa.Column('fecha_suscripcion_plan_mejoramiento', sa.Date(), nullable=True),
    sa.Column('fecha_corte_avance', sa.Date(), nullable=True),
    sa.Column('fecha_seguimiento_evaluacion', sa.Date(), nullable=True),
    sa.Column('fecha_modificacion', sa.Date(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('role', sa.Enum('admin', 'normal', 'consulta', 'externo', name='role'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('courses',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_courses_id'), 'courses', ['id'], unique=False)
    op.create_table('detalle_plan',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('plan_id', sa.Integer(), nullable=True),
    sa.Column('numero_consecutivo_hallazgo', sa.Integer(), nullable=True),
    sa.Column('codigo_hallazgo', sa.String(length=10), nullable=True),
    sa.Column('descripcion_hallazgo', sa.String(length=255), nullable=True),
    sa.Column('causa_hallazgo', sa.Text(), nullable=True),
    sa.Column('efecto_hallazgo', sa.Text(), nullable=True),
    sa.Column('accion_mejoramiento', sa.Text(), nullable=True),
    sa.Column('objetivo', sa.Text(), nullable=True),
    sa.Column('descripcion_metas', sa.Text(), nullable=True),
    sa.Column('denominacion_unidad_medida_meta', sa.String(length=20), nullable=True),
    sa.Column('unidad_medida_meta', sa.String(length=10), nullable=True),
    sa.Column('avance_fisico_ejecucion_metas', sa.Float(), nullable=True),
    sa.Column('porcentaje_avance_fisico_ejecucion_metas', sa.Float(), nullable=True),
    sa.Column('fecha_inicio_metas', sa.Date(), nullable=True),
    sa.Column('fecha_terminacion_metas', sa.Date(), nullable=True),
    sa.Column('plazo_semanas_metas', sa.Integer(), nullable=True),
    sa.Column('area_responsable', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['plan_id'], ['plan.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('profile',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('firs_name', sa.String(length=50), nullable=False),
    sa.Column('last_name', sa.String(length=50), nullable=False),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_profile_id'), 'profile', ['id'], unique=False)
    op.create_table('sections',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_sections_id'), 'sections', ['id'], unique=False)
    op.create_table('student_courses',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('completed', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_student_courses_id'), 'student_courses', ['id'], unique=False)
    op.create_table('content_blocks',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('type', sa.Enum('lesson', 'quiz', 'assignment', name='contenttype'), nullable=True),
    sa.Column('url', sqlalchemy_utils.types.url.URLType(), nullable=True),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('section_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['section_id'], ['sections.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_content_blocks_id'), 'content_blocks', ['id'], unique=False)
    op.create_table('completed_content_blocks',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('content_block_id', sa.Integer(), nullable=False),
    sa.Column('url', sqlalchemy_utils.types.url.URLType(), nullable=True),
    sa.Column('feedback', sa.Text(), nullable=True),
    sa.Column('grade', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['content_block_id'], ['content_blocks.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_completed_content_blocks_id'), 'completed_content_blocks', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_completed_content_blocks_id'), table_name='completed_content_blocks')
    op.drop_table('completed_content_blocks')
    op.drop_index(op.f('ix_content_blocks_id'), table_name='content_blocks')
    op.drop_table('content_blocks')
    op.drop_index(op.f('ix_student_courses_id'), table_name='student_courses')
    op.drop_table('student_courses')
    op.drop_index(op.f('ix_sections_id'), table_name='sections')
    op.drop_table('sections')
    op.drop_index(op.f('ix_profile_id'), table_name='profile')
    op.drop_table('profile')
    op.drop_table('detalle_plan')
    op.drop_index(op.f('ix_courses_id'), table_name='courses')
    op.drop_table('courses')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_table('plan')
    # ### end Alembic commands ###
